import{_ as o,c as l,b as s,d as t,w as e,a as c,r as i,o as u,e as p}from"./app-e03MkAss.js";const r={},d={class:"table-of-contents"};function k(m,n){const a=i("router-link");return u(),l("div",null,[s("nav",d,[s("ul",null,[s("li",null,[t(a,{to:"#introduction"},{default:e(()=>n[0]||(n[0]=[p("Introduction")])),_:1})]),s("li",null,[t(a,{to:"#grouping"},{default:e(()=>n[1]||(n[1]=[p("Grouping")])),_:1})]),s("li",null,[t(a,{to:"#path-parameters"},{default:e(()=>n[2]||(n[2]=[p("Path Parameters")])),_:1})])])]),n[3]||(n[3]=c(`<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>Routing in Daravel has a familiar concept just like below</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">apiRouter<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/users&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getUsers<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Routes or routers are contained in the <code>routes</code> folder and contained in <code>.dart</code> files.</p><p>To make a router or route file, use the below command.</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">dartisan make:router <span class="token operator">&lt;</span>router-name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre></div><p>This creates a route file at <code>routes/&lt;route-name&gt;</code>.</p><p>Let&#39;s say you want to create routes for your API, you run <code>dartisan make:router api</code> and a router gets created at <code>routes/api.dart</code>.</p><p>The contents of the <code>routes/api.dart</code> file will look like the below.</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:daravel_core/daravel_core.dart&#39;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// import &#39;../app/http/controllers/landing_controller.dart&#39;;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">final</span> apiRouter <span class="token operator">=</span> <span class="token class-name">DaravelRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">apiRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// apiRouter.get(&#39;/v1&#39;, LandingController().api);</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="grouping" tabindex="-1"><a class="header-anchor" href="#grouping"><span>Grouping</span></a></h2><p>Routes can be grouped within routes files. let&#39;s say you have a couple of endpoints that always starts with <code>/users</code> and you want to group them, you can achieve that with the below</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">apiRouter<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/users&#39;</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>router<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;transfer&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>transfer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    router<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>delete<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;block&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also add middlewares to a group</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line">apiRouter<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/users&#39;</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span>router<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;transfer&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>transfer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    router<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>delete<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;block&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token class-name">ValidUserMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="path-parameters" tabindex="-1"><a class="header-anchor" href="#path-parameters"><span>Path Parameters</span></a></h2><p>The router also supports passing route parameters. Consider the following route and controller:</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="routes/api.dart"><pre><code><span class="line">apiRouter<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/users/{userId}&#39;</span></span><span class="token punctuation">,</span> <span class="token class-name">UserController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart" data-title="dart"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token class-name">Response</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token class-name">Request</span> req<span class="token punctuation">,</span> <span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">final</span> user <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchUserFromDatabase</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notice how userId specified in the route can be obtained from a positional parameter in the controller function.</p>`,20))])}const g=o(r,[["render",k],["__file","routing.html.vue"]]),h=JSON.parse('{"path":"/http/routing.html","title":"Routing","lang":"en-US","frontmatter":{"title":"Routing"},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Grouping","slug":"grouping","link":"#grouping","children":[]},{"level":2,"title":"Path Parameters","slug":"path-parameters","link":"#path-parameters","children":[]}],"git":{"updatedTime":1732249257000,"contributors":[{"name":"The Full-Stack Jonin","email":"francis94c@gmail.com","commits":1}]},"filePathRelative":"http/routing.md"}');export{g as comp,h as data};
